{"version":3,"sources":["constan/types.js","action/isAction.js","components/TaskForm.jsx","action/listtask.js","components/HeaderText.jsx","components/Search.jsx","components/Sort.jsx","components/control.jsx","components/TableItem.jsx","components/DataTable.jsx","App.js","reportWebVitals.js","reducers/tasks.js","reducers/openForm.js","reducers/editTask.js","reducers/index.js","index.js"],"names":["LISTTASK","ADDTASK","DELETETASK","UPDATETASK","UNUPDATETASK","UPDATEITEM","SORTTASKAZ","SORTTASKZA","SEARCHTASK","OPENFORM","CLOSEFORM","TOGGORFORM","TOGGORACTIVE","openForm","type","types","unUpdate","connect","state","isActiveForm","task","dispatch","props","addTask","action","closeForm","updateItem","isaction","useState","nameTask","setNameTask","isActive","setIsActive","getData","e","target","name","value","onCLear","useEffect","id","text","textBtn","className","onClick","onSubmit","preventDefault","onChange","required","HeaderText","searchTasks","getTasks","setTask","placeholder","sortTaskAZ","sortTaskZA","isDisplay","setIsDisplay","display","setDisplay","openMenu","sortTasks","data","style","role","Control","getName","moveId","updateTask","onpenForm","handleActive","index","tasks","Tritem","map","FormConltrol","setClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","v4","Math","floor","random","toString","substring","getString","JSON","parse","localStorage","getItem","initialTasks","myReducer","push","setItem","stringify","findIndex","splice","indexs","i","sort","list1","list2","a","toLowerCase","b","listTask","filter","indexOf","combineReducers","opentForm","editTask","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22d8246f.chunk.js","sourcesContent":["//Làm việc với list Task\r\nexport const LISTTASK = \"LISTTASK\";\r\nexport const ADDTASK = \"ADDTASK\";\r\nexport const DELETETASK = \"DELETETASK\"\r\nexport const UPDATETASK = \"UPDATETASK\"\r\nexport const UNUPDATETASK = \"UNUPDATETASK\"\r\n\r\nexport const UPDATEITEM = \"UPDATETASKITEM\"\r\n\r\n//sắp xếp theo A - Z\r\nexport const SORTTASKAZ = \"SORTTASKAZ\"\r\n//sắp xếp theo A - Z\r\nexport const SORTTASKZA = \"SORTTASKZA\"\r\n\r\n//Tìm kiếm\r\n\r\nexport const SEARCHTASK = \"SEARCHTASK\"\r\n\r\n// mở đóng form\r\nexport const OPENFORM = \"OPENFORM\"\r\nexport const CLOSEFORM = \"CLOSEFORM\"\r\nexport const TOGGORFORM = \"TOGGORFORM\"\r\nexport const TOGGORACTIVE = \"TOGGORACTIVE\"\r\n","import * as types from \"../constan/types\";\r\n\r\nexport const toggorFrom = () => {\r\n    return {\r\n        type: types.TOGGORFORM,\r\n    }\r\n\r\n}\r\n\r\nexport const openForm = () => {\r\n    return {\r\n        type: types.OPENFORM,\r\n    }\r\n\r\n}\r\n\r\nexport const closeForm = () => {\r\n    return {\r\n        type: types.CLOSEFORM,\r\n    }\r\n\r\n}\r\n\r\nexport const unUpdate = () => {\r\n    return {\r\n        type: types.UNUPDATETASK,\r\n    }\r\n}\r\n\r\n","import '../App.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../action/listtask\"\r\nimport * as isaction from \"../action/isAction\"\r\nimport { useState, useEffect } from 'react';\r\nfunction TaskForm(props) {\r\n\r\n\r\n\r\n    var [nameTask, setNameTask] = useState(\"\");\r\n    let [isActive, setIsActive] = useState('false');\r\n\r\n\r\n    let handleForm = () => {\r\n        props.closeForm();\r\n    }\r\n\r\n    let getData = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        if (name === \"name\") {\r\n            setNameTask(value);\r\n        } else {\r\n            setIsActive(value);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    let setSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.task.id) {\r\n            props.updateItem({\r\n                id: props.task.id,\r\n                name: nameTask,\r\n                state: isActive + '',\r\n            });\r\n            props.unUpdate();\r\n\r\n        } else {\r\n            props.addTask({ name: nameTask, isActive: isActive });\r\n\r\n        }\r\n        onCLear();\r\n    }\r\n\r\n\r\n\r\n    let onCLear = () => {\r\n        setNameTask(\"\");\r\n        setIsActive('false');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.task.id) {\r\n            setNameTask(props.task.name);\r\n            setIsActive(props.task.state);\r\n        } else {\r\n            setNameTask(\"\");\r\n            setIsActive('false');\r\n        }\r\n    }, [props.task])\r\n\r\n\r\n\r\n    let text = props.task.id ? \"Sửa công việc\" : \"Thêm Công Việc\"\r\n    let textBtn = props.task.id ? \"Save\" : \"Thêm\"\r\n\r\n\r\n    return (\r\n        <div className=\"panel panel-warning\">\r\n            <div className=\"panel-heading\">\r\n                <div className=\"heading-add\">\r\n                    <h3 className=\"panel-title\">{text}</h3>\r\n                    <span type=\"button\" className=\"delete\" onClick={handleForm}>&times;</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <form onSubmit={setSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Tên :</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"name\" onChange={getData} value={nameTask} />\r\n                    </div>\r\n                    <label>Trạng Thái :</label>\r\n                    <select className=\"form-control\" required=\"required\"\r\n                        name=\"active\" onChange={getData} value={isActive}>\r\n                        <option value={'true'} >Kích Hoạt</option>\r\n                        <option value={'false'}>Ẩn</option>\r\n                    </select>\r\n                    <br />\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\">{textBtn}</button>&nbsp;\r\n                        <button type=\"reset\" onClick={onCLear} className=\"btn btn-danger\" >Hủy Bỏ</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        isActiveForm: state.isActiveForm,\r\n        task: state.task,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        addTask: (task) => {\r\n            dispatch(action.ADDTASK(task));\r\n        },\r\n\r\n        closeForm: () => {\r\n            dispatch(isaction.closeForm());\r\n        },\r\n        updateItem: (task) => {\r\n            dispatch(action.updateItem(task));\r\n        },\r\n        unUpdate: () => {\r\n            dispatch(isaction.unUpdate());\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(TaskForm);\r\n","import * as types from \"../constan/types\";\r\n\r\nexport const LISTS = () => {\r\n    return {\r\n        type: types.LISTTASK\r\n    }\r\n}\r\n\r\nexport const ADDTASK = (task) => {\r\n    return {\r\n        type: types.ADDTASK,\r\n        task\r\n    }\r\n}\r\n\r\nexport const DELETETASK = (id) => {\r\n    return {\r\n        type: types.DELETETASK,\r\n        id\r\n    }\r\n}\r\n\r\nexport const UPDATETASK = (task) => {\r\n    return {\r\n        type: types.UPDATETASK,\r\n        task\r\n    }\r\n}\r\n\r\nexport const updateItem = (task) => {\r\n    return {\r\n        type: types.UPDATEITEM,\r\n        task: task\r\n    }\r\n}\r\n\r\nexport const toggorActive = (id) => {\r\n    return {\r\n        type: types.TOGGORACTIVE,\r\n        id\r\n    }\r\n}\r\n\r\nexport const sortTaskAZ = () => {\r\n    return {\r\n        type: types.SORTTASKAZ,\r\n    }\r\n}\r\n\r\nexport const sortTaskZA = () => {\r\n    return {\r\n        type: types.SORTTASKZA,\r\n    }\r\n}\r\n\r\nexport const searchTask = (name) => {\r\n    return {\r\n        type: types.SEARCHTASK,\r\n        name: name\r\n    }\r\n}","import '../App.css';\r\n\r\nfunction HeaderText() {\r\n  return (\r\n        <div className=\"text-center\">\r\n            <h1>Quản Lý Công Việc</h1>\r\n            <hr/>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default HeaderText;\r\n","import '../App.css';\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../action/listtask\";\r\n\r\n\r\nfunction Search(props) {\r\n    let [task, setTask] = useState();\r\n    let searchTask = () => {\r\n        if (task) {\r\n            props.searchTasks(task)\r\n        } else {\r\n            props.getTasks();\r\n        }\r\n    }\r\n\r\n    let getValue = (e) => {\r\n        var value = e.target.value;\r\n        setTask(value);\r\n\r\n    }\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" onChange={getValue} />\r\n                <span className=\"input-group-btn\">\r\n                    <button className=\"btn btn-primary\" type=\"button\" onClick={searchTask}>\r\n                        <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        searchTasks: (task) => {\r\n            dispatch(action.searchTask(task));\r\n        },\r\n\r\n        getTasks: () => {\r\n            dispatch(action.LISTS());\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Search);","import '../App.css';\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../action/listtask\";\r\n\r\nfunction Sort(props) {\r\n\r\n    let [isDisplay, setIsDisplay] = useState(false);\r\n    let [display, setDisplay] = useState({});\r\n\r\n    let openMenu = () => {\r\n        isDisplay ? setDisplay({ display: \"none\" })\r\n            : setDisplay({ display: \"block\" });\r\n    }\r\n\r\n    let Displaymenu = () => {\r\n        setIsDisplay(!isDisplay);\r\n        openMenu()\r\n    }\r\n\r\n    let sortTasks = (data) => {\r\n        if (data === 0) {\r\n            props.sortTaskAZ()\r\n        } else {\r\n            props.sortTaskZA();\r\n        }\r\n        setIsDisplay(!isDisplay);\r\n        openMenu()\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary dropdown-toggle\"\r\n                    type=\"button\" id=\"dropdownMenu1\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"true\"\r\n                    onClick={Displaymenu}\r\n                >\r\n                    Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\" style={display}>\r\n                    <li>\r\n                        <button onClick={() => sortTasks(0)}>\r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                Tên A-Z\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        <button onClick={() => sortTasks(1)} >\r\n                            <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                Tên Z-A\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li><button>Trạng Thái Kích Hoạt</button></li>\r\n                    <li><button>Trạng Thái Ẩn</button></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        sortTaskAZ: () => {\r\n            dispatch(action.sortTaskAZ());\r\n        },\r\n        sortTaskZA: () => {\r\n            dispatch(action.sortTaskZA());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Sort);","import '../App.css';\r\nimport Search from './Search.jsx';\r\nimport Sort from './Sort.jsx';\r\nfunction Control(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"row mt-15\">\r\n            <Search getName={props.getName} />\r\n            <Sort sortTasks={props.sortTasks} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Control;","import '../App.css';\r\nimport * as action from \"../action/listtask\";\r\nimport * as isaction from \"../action/isAction\"\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction TableItem(props) {\r\n    let { task } = props\r\n\r\n    let deleteTask = (id) => {\r\n        props.moveId(id)\r\n    }\r\n\r\n    let updateData = () => {\r\n        props.onpenForm();\r\n        props.updateTask(task)\r\n    }\r\n\r\n    let handleState = (id) => {\r\n        props.handleActive(id);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.index + 1}</td>\r\n            <td className=\"td-name\">{task.name}</td>\r\n            <td className=\"text-center\">\r\n                <span className={task.state === true ? \"label label-danger\"\r\n                    : \"label label-success\"}\r\n                    onClick={() => handleState(task.id)}\r\n                >\r\n                    {task.state === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n                </span>\r\n            </td>\r\n            <td className=\"text-center text-handle\">\r\n                <button type=\"button\" className=\"btn btn-warning\" onClick={updateData}>\r\n                    <span className=\"fa fa-pencil mr-5\" ></span>Sửa\r\n                </button>\r\n                &nbsp;\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteTask(task.id)}>\r\n                    <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        moveId: (id) => {\r\n            dispatch(action.DELETETASK(id));\r\n        },\r\n\r\n        updateTask: (task) => {\r\n            dispatch(action.UPDATETASK(task));\r\n        }\r\n        ,\r\n        onpenForm: () => {\r\n            dispatch(isaction.openForm());\r\n        },\r\n        handleActive: (id) => {\r\n            dispatch(action.toggorActive(id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(TableItem);\r\n","import React from 'react';\r\nimport TableItem from './TableItem.jsx';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction DataTable(props) {\r\n\r\n    var { tasks } = props\r\n\r\n    let Tritem = tasks.map((task, index) => {\r\n        return <TableItem key={index}\r\n            task={{ ...task }} index={index}\r\n        />\r\n    })\r\n    return (\r\n        <div className=\"row mt-15\">\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-center\">STT</th>\r\n                            <th className=\"text-center\">Tên</th>\r\n                            <th className=\"text-center\">Trạng Thái</th>\r\n                            <th className=\"text-center\">Hành Động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Tritem}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        tasks: state.tasks\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, null)(DataTable);\r\n","import './App.css';\nimport TaskForm from './components/TaskForm.jsx';\nimport HeaderText from './components/HeaderText.jsx';\nimport Control from './components/control.jsx';\nimport DataTable from './components/DataTable.jsx';\nimport * as action from \"./action/isAction\"\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n\n  let { isActiveForm } = props;\n\n  let setTaskForm = () => {\n    props.openForm();\n    props.unUpdate();\n  }\n\n  let FormConltrol = isActiveForm ? <TaskForm /> : \"\";\n  let setClassName = isActiveForm ?\n    \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n    : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n\n  return (\n    <div className=\"container\">\n      <HeaderText />\n      <div className=\"row\">\n        <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n          {FormConltrol}\n        </div>\n        <div className={setClassName}>\n          <button type=\"button\" className=\"btn btn-primary\"\n            onClick={setTaskForm}>\n            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n          </button>\n          <Control />\n          <DataTable />\n        </div>\n      </div>\n    </div>\n  );\n}\nconst mapStatetoProps = (state) => {\n  return {\n    isActiveForm: state.isActiveForm\n  }\n}\n\nconst mapDispathtoProps = (dispatch, props) => {\n  return {\n    openForm: () => {\n      dispatch(action.openForm());\n    },\n    unUpdate: () => {\n      dispatch(action.unUpdate());\n    }\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispathtoProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../constan/types\"\r\nimport { findIndex } from \"lodash\"\r\n\r\nvar v4 = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000).toString().substring(1)\r\n}\r\n\r\nvar getString = () => {\r\n    return v4() + v4() + '-' + v4() + v4() + '-' +\r\n        v4() + v4() + '-' + v4() + v4() + '-' + v4() + v4() + '-' + v4() + v4();\r\n}\r\n\r\n\r\nvar tasks = JSON.parse(localStorage.getItem('lists'));\r\nvar initialTasks = tasks ? tasks : [];\r\n// console.log(initialTasks)\r\n\r\nvar myReducer = (state = [...initialTasks], action) => {\r\n    switch (action.type) {\r\n        case types.LISTTASK:\r\n            state = JSON.parse(localStorage.getItem('lists'));\r\n            return [...state];\r\n        case types.ADDTASK:\r\n            var task = {\r\n                id: getString(),\r\n                name: action.task.name,\r\n                state: action.task.isActive === 'true' ? true : false\r\n            };\r\n            state.push(task);\r\n            localStorage.setItem(\"lists\", JSON.stringify(state));\r\n            return [...state];\r\n        case types.DELETETASK:\r\n            let index = findIndex(state, (task) => task.id === action.id);\r\n            state.splice(index, 1);\r\n            localStorage.setItem(\"lists\", JSON.stringify(state));\r\n            return [...state];\r\n        case types.UPDATEITEM:\r\n            let indexs = findIndex(state, (task) => task.id === action.task.id);\r\n            action.task.state = action.task.state === 'true' ? true : false\r\n            state.splice(indexs, 1, action.task);\r\n            localStorage.setItem('lists', JSON.stringify(state));\r\n            return [...state];\r\n\r\n        case types.TOGGORACTIVE:\r\n            var i = findIndex(state, (task) => task.id === action.id);\r\n            state[i].state = !state[i].state;\r\n            localStorage.setItem('lists', JSON.stringify(state));\r\n            return [...state];\r\n        case types.SORTTASKAZ:\r\n            state.sort(function (list1, list2) {\r\n                let a = list1.name.toLowerCase();\r\n                let b = list2.name.toLowerCase();\r\n                return a === b ? 0 : a > b ? 1 : -1;\r\n            })\r\n            return [...state];\r\n\r\n        case types.SORTTASKZA:\r\n            state.sort(function (list1, list2) {\r\n                let a = list1.name.toLowerCase();\r\n                let b = list2.name.toLowerCase();\r\n                return a === b ? 0 : a < b ? 1 : -1;\r\n            })\r\n            return [...state];\r\n\r\n        case types.SEARCHTASK:\r\n            let listTask = state.filter(task => {\r\n                return task.name.toLowerCase().indexOf(action.name.toLowerCase()) !== -1;\r\n            })\r\n            state = listTask;\r\n            return [...state];\r\n\r\n        default: return [...state];\r\n    }\r\n}\r\n\r\nexport default myReducer;","import * as types from \"../constan/types\";\r\n\r\nlet isActiveForm = false;\r\n\r\nlet myReducer = (state = isActiveForm, action) => {\r\n    switch (action.type) {\r\n        case types.TOGGORFORM:\r\n            state = !state\r\n            return state;\r\n        case types.OPENFORM:\r\n            state = true;\r\n            return state;\r\n        case types.CLOSEFORM:\r\n            state = false;\r\n            return state;\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constan/types\";\r\n\r\nlet isActiveForm = {};\r\n\r\nlet myReducer = (state = isActiveForm, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATETASK:\r\n            return action.task;\r\n        case types.UNUPDATETASK:\r\n            return {};\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default myReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport opentForm from \"./openForm\";\r\nimport editTask from \"./editTask\";\r\n\r\nvar myReducer = combineReducers({\r\n    tasks,\r\n    isActiveForm: opentForm,\r\n    task: editTask,\r\n})\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//store\nimport { createStore } from \"redux\";\nimport myReducer from \"./reducers/index\"\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}